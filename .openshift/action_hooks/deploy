#!/bin/bash
# vim :set ts=4 sw=4 sts=4

set -e

function msg() {
	echo "*** $@"
}

if [ -f ${OPENSHIFT_REPO_DIR}requirements_openshift.txt ]
then
	cat ${OPENSHIFT_REPO_DIR}requirements_openshift.txt >> ${OPENSHIFT_REPO_DIR}requirements.txt
fi

VENV_VERSION=$(md5sum ${OPENSHIFT_REPO_DIR}requirements.txt | cut -d ' ' -f1)
VENV_BASE_DIR=${OPENSHIFT_DATA_DIR}virtualenvs/
VENV_APP_DIR=${VENV_BASE_DIR}${VENV_VERSION}

if [ ! -d "${VENV_BASE_DIR}" ]
then
	mkdir "${VENV_BASE_DIR}"
fi

if [ -d "${VENV_APP_DIR}" ]
then
	msg "Virtualenv '${VENV_APP_DIR}' is up to date!"
	source ${VENV_APP_DIR}/bin/activate
else
	msg "Creating new virtualenv 'VENV_APP_DIR'"

	# remove old virtualenvs
	rm -rf ${VENV_BASE_DIR}*

	# create new virtualenv
	virtualenv ${VENV_APP_DIR}

	# activate virtualenv
	source ${VENV_APP_DIR}/bin/activate

	# install dependencies
	export PIP_DOWNLOAD_CACHE=${OPENSHIFT_TMP_DIR}.pip/cache
	pip install --log=${OPENSHIFT_TMP_DIR}.pip/pip.log -r ${OPENSHIFT_REPO_DIR}requirements.txt
fi

# update openshift.settings python module to provide default application settings module name
pushd ${OPENSHIFT_REPO_DIR} >/dev/null
DEFAULT_SETTINGS=$(find -type f -name 'settings.py' | grep -v '/openshift/' | sed 's/^\.\///')
RESULT=$(echo "${DEFAULT_SETTINGS}" | wc -l | awk '{ print $1 }')

if [ $RESULT -ne 1 ]
then
	echo "*** Unable to found default settings: ${RESULT} settings module(s) found!" >&2
	exit 1
fi

PYTHON_MODULE=$(echo $DEFAULT_SETTINGS | sed 's/\//./g' | sed 's/\.py$//')
msg "Default settings found: ${PYTHON_MODULE}"

sed -i "s/%DJANGO_SETTINGS_MODULE%/${PYTHON_MODULE}/" openshift/settings.py
msg "Python module openshift.settings updated!"
popd >/dev/null

# boot django database setup and static file collection
export DJANGO_SETTINGS_MODULE="openshift.settings"

msg "Executing 'python ${OPENSHIFT_REPO_DIR}manage.py syncdb --noinput'"
python ${OPENSHIFT_REPO_DIR}manage.py syncdb --noinput

msg "Executing 'python ${OPENSHIFT_REPO_DIR}manage.py migrate'"
python ${OPENSHIFT_REPO_DIR}manage.py migrate

if [ -d ${OPENSHIFT_DATA_DIR}static ]
then
	msg "Executing 'python ${OPENSHIFT_REPO_DIR}manage.py collectstatic -c --noinput'"
	python ${OPENSHIFT_REPO_DIR}manage.py collectstatic -c
fi

msg "Executing 'python ${OPENSHIFT_REPO_DIR}manage.py collectstatic -l --noinput'"
python ${OPENSHIFT_REPO_DIR}manage.py collectstatic -l

